name: 'publish'
on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 20.9.0

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install GTK+3 (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev

      - name: install GTK+3 (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install gtk+3

      - name: install app dependencies and build it
        run: yarn && yarn build

      - name: import apple certificate
        if: matrix.platform == 'macos-latest'
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        run: |
          echo "$APPLE_CERTIFICATE" | base64 --decode > certificate.p12
          security create-keychain -p "$APPLE_CERTIFICATE_PASSWORD" build.keychain
          security list-keychains -d user -s build.keychain
          security list-keychains -d user -s login.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$APPLE_CERTIFICATE_PASSWORD" build.keychain
          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "$APPLE_CERTIFICATE_PASSWORD" build.keychain
          security list-keychains
          security find-identity -v -p codesigning

      - name: list keychains
        if: matrix.platform == 'macos-latest'
        run: security list-keychains

      - name: check certificates
        if: matrix.platform == 'macos-latest'
        run: |
          security find-certificate -a -c "Developer ID Application: Mitsuyuki Yamaguchi" -p

      - name: verify entitlements file
        if: matrix.platform == 'macos-latest'
        run: |
          ls -la path/to/entitlements.plist

      - name: debug signing
        if: matrix.platform == 'macos-latest'
        run: |
          codesign --display --verbose=4 /Users/runner/work/block_hand_bitcoin/block_hand_bitcoin/src-tauri/target/release/bundle/macos/block_hand_bitcoin.app
          codesign --verify --deep --strict /Users/runner/work/block_hand_bitcoin/block_hand_bitcoin/src-tauri/target/release/bundle/macos/block_hand_bitcoin.app

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces __VERSION__ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.settings.args }}
          entitlements: path/to/entitlements.plist
